<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xlingpaper PUBLIC "-//XMLmind//DTD XLingPap//EN"
"XLingPap.dtd">
<xlingpaper
version="2.24.0"
><styledPaper
><lingPaper
automaticallywrapinterlinears="yes"
version="2.28.0"
><frontMatter
><title
><object
type="tVarGen"
></object
> User Documentation</title
><author
>H. Andrew Black</author
><affiliation
>SIL International</affiliation
><emailAddress
>blackhandrew@gmail.com</emailAddress
><date
>16 August, 2023</date
><version
>Version 1.1.0 Beta</version
><version
>Copyright © 2023 SIL International</version
><contents
></contents
></frontMatter
><section1
id="sIntroVarGen"
><secTitle
>Introduction</secTitle
><p
><object
type="tVarGen"
></object
> is a tool that works as a utility in <object
type="tFieldWorks"
></object
> (aka <object
type="tFLEx"
></object
>). <object
type="tVarGen"
></object
> allows you to define operations on a form in an entry to produce new variants of that entry. You can use what is in the <object
type="tCitationForm"
></object
>, Lexeme Form, or in the first Etymology Source form for what to match on. It is possible to use a custom field, too. <object
type="tVarGen"
></object
> defaults to using the <object
type="tCitationForm"
></object
>.</p
><p
><object
type="tVarGen"
></object
> works with version <object
type="tFLExVersion"
></object
> or higher of <object
type="tFLEx"
></object
> and is only available on 64-bit Windows computers.</p
><p
>Each operation defined in <object
type="tVarGen"
></object
> describes a pattern that is used to match the indicated kind of form in the <object
type="tFLEx"
></object
> database. There also is a set of actions that are to be applied to each such form. The result of the action will produce a new variant of that entry.</p
><section2
id="sInstallationVar"
><secTitle
>Installation</secTitle
><p
>To install <object
type="tVarGen"
></object
>, obtain the installer from <link
href="https://github.com/AndyBlack/FLExAllomorphGenerator/tree/master/Installer/Output/AllomorphGeneratorDllSetup.exe"
>https://​github.com/​AndyBlack/​FLExAllomorphGenerator/​tree/​master/​InstallerVarGen/​Output/Variant​Generator​Dll​Setup.exe</link
>. The installer will check to see if you have installed <object
type="tFieldWorks"
></object
> version 9. If not, it will abort.</p
><p
>We recommend that you close <object
type="tFieldWorks"
></object
> before running the <object
type="tVarGen"
></object
> installer.</p
></section2
><section2
id="sInvokingFromFLExVar"
><secTitle
>Invoking <object
type="tVarGen"
></object
> from within <object
type="tFLEx"
></object
></secTitle
><p
>While running <object
type="tFLEx"
></object
>, use <object
type="tMenuItem"
>Tools</object
> menu item / <object
type="tMenuItem"
>Utilities...</object
>. Find the “Variant Generator” item, check it, and then click on the “Run Checked Utilities Now” button.</p
></section2
><section2
id="sAppearanceVar"
><secTitle
>Appearance</secTitle
><p
><object
type="tVarGen"
></object
> looks something like what is shown in <exampleRef
letter="xVarGenEditTab"
num="xVarGenEditTab"
></exampleRef
>.<endnote
id="nBAckColor"
><p
>Since <object
type="tVarGen"
></object
> is based on <object
type="tAlloGen"
></object
>, they share many portions. We use a different background color in the tabs for <object
type="tVarGen"
></object
> in order to provide a potentially more obvious visual distinction between the two tools.</p
></endnote
></p
><example
num="xVarGenEditTab"
><chart
><img
XeLaTeXSpecial="scaled='625'"
src="resources/VarGenEditTab.png"
width="450"
></img
></chart
></example
><p
>The top portion shows the file containing the variant generation operations. Below it are three tabs, one for editing the operations, one for running them, and one for editing the master list of replace operations. See section <sectionRef
sec="sEditTab"
></sectionRef
> for information on using the <object
type="tEditTab"
></object
> tab. In one project, the <object
type="tRunTab"
></object
> tab looks like what is in <exampleRef
letter="xVarGenRunTab"
num="xVarGenRunTab"
></exampleRef
>.</p
><example
num="xVarGenRunTab"
><chart
><img
XeLaTeXSpecial="scaled='625'"
src="resources/VarGenRunTab.png"
width="450"
></img
></chart
></example
><p
>This tab is explained in section <sectionRef
sec="sRunTabVar"
></sectionRef
> below. In this same project, the <object
type="tEditReplaceTab"
></object
> tab looks like what is in <exampleRef
letter="xVarGenEditReplaceOpTab"
num="xVarGenEditReplaceOpTab"
></exampleRef
>.</p
><example
num="xVarGenEditReplaceOpTab"
><chart
><img
XeLaTeXSpecial="scaled='625'"
src="resources/VarGenEditReplceOpsTab.png"
width="450"
></img
></chart
></example
><p
>This tab is explained in section <sectionRef
sec="sEditReplaceOpTab"
></sectionRef
> below.</p
><p
>The “Create New File” button is used to create a new file containing a new set of operations. When saving a <object
type="tVarGen"
></object
> file, I suggest you put it in a folder under the “My FieldWorks” directory in your “Documents” folder.</p
><p
>The “Browse” button is used to select an operations file. <object
type="tVarGen"
></object
> files by convention have an extension of “.vgf” and this is what the file browser uses.</p
><p
>The “Help” button is used to get this user documentation file or to show the “About” dialog box.</p
></section2
></section1
><section1
id="sEditTab"
><secTitle
><object
type="tEditTab"
></object
> tab</secTitle
><p
>The <object
type="tEditTab"
></object
> tab has a list of operations in a column on the left. When you select one of them, the rest of the tab contains the information about the selected operation. See sections <sectionRef
sec="sEditInfo"
></sectionRef
>–<sectionRef
sec="sSaveButton"
textBefore="none"
></sectionRef
> for more.</p
><p
>You can create new operations, rearrange them, or delete them by right-clicking on one. You will then see a context menu like what is in <exampleRef
letter="xOperationsContextMenu"
num="xOperationsContextMenu"
></exampleRef
>.</p
><xi:include
href="../../AllomorphGeneratorDll/doc/AlloGenUserDocumentation.xml"
xpointer="xOperationsContextMenu"
xmlns:xi="http://www.w3.org/2001/XInclude"
></xi:include
><section2
id="sEditInfo"
><secTitle
>Operation name and description</secTitle
><p
>The top two text boxes are where you give a name and a description for the operation. These are for your benefit so use something that makes sense to you.</p
></section2
><section2
id="sPattern"
><secTitle
>Pattern section</secTitle
><p
>The pattern section contains three parts which define which forms will be used: the Match pattern, the morpheme types to use, and an optional category.</p
><section3
id="sPatMatch"
><secTitle
>Match</secTitle
><p
>The “Match” part uses the same dialog box that <object
type="tFLEx"
></object
> uses for filter searches. To use it, click on the “Define match” button.</p
></section3
><section3
id="sPatMorphTypes"
><secTitle
>Morph Types</secTitle
><p
>To set which morpheme types to use in the pattern, click on the “Edit” button to the right of the box showing the currently selected morpheme types.</p
></section3
><section3
id="sPatCategory"
><secTitle
>Category</secTitle
><p
>If you need to limit the pattern to a particular category, then click on the <object
type="tFLEx"
></object
>-like chooser button to the right of the category box.</p
></section3
></section2
><section2
id="sActions"
><secTitle
>Actions section</secTitle
><p
>The Actions section allows you to define a set of ordered replace operations to be applied to the indicated form to create the shape of the new variant. You can also optionally select a set of variant types and/or indicate whether the newly created variant entry should show as a minor entry.</p
><section3
id="sActReplaceOp"
><secTitle
>Replace operations</secTitle
><p
>The first box in the actions section contains an ordered set of replace operations. They are ordered in the sense that the output of one is the input to the next. You can edit one by double-clicking on it or by right-clicking and choosing an appropriate option from the ensuing context menu. Example <exampleRef
letter="xReplaceContextMenu"
num="xReplaceContextMenu"
></exampleRef
> shows what this menu might look like.</p
><xi:include
href="../../AllomorphGeneratorDll/doc/AlloGenUserDocumentation.xml"
xpointer="xReplaceContextMenu"
xmlns:xi="http://www.w3.org/2001/XInclude"
></xi:include
><p
>When you edit a replace operation, you will see a dialog box that will look something like what is in <exampleRef
letter="xReplaceDialog"
num="xReplaceDialog"
></exampleRef
>.</p
><xi:include
href="../../AllomorphGeneratorDll/doc/AlloGenUserDocumentation.xml"
xpointer="xReplaceDialog"
xmlns:xi="http://www.w3.org/2001/XInclude"
></xi:include
><p
>There are four text boxes:</p
><ol
><li
>A name to use for this replace operation;</li
><li
>a description for it;</li
><li
>what to look for (“Replace”) and</li
><li
>what to change what matches ("To”).</li
></ol
><p
>There is also a set of vernacular writing systems names, each with a check box before it. Be sure to check each vernacular writing system that this replace operation should apply to.</p
><p
>The replace can be a portion of the content of the indicated form. That is, you do not have to try to match the entire content. There is an option to use regular expressions for what to replace and what to change it to. Simply check the “Regular expression” check box or leave it unchecked. When you edit any replace here, the changes made will also be made in the corresponding replace in the <object
type="tEditReplaceTab"
></object
> tab. That is, you do not need to make the same change here and in the <object
type="tEditReplaceTab"
></object
> tab. You only need to make the change once in either place.</p
><p
>Each replace operation can be applied to one or more of the currently defined vernacular writing systems. Check all that apply.</p
><p
>When you choose either the “Insert new before” or “Insert new after” option, a new replace operation will be inserted and you will see the “Edit Replace Operation” dialog box. Any new replace operation is automatically added to the master list of replace operations shown in the <object
type="tEditReplaceTab"
></object
> tab.</p
><p
>When you choose either the “Insert existing before” or “Insert existing after” option, you will see the “Replace Operations Chooser” dialog box. It will look something like what is in example <exampleRef
letter="xReplaceOpsChooser"
num="xReplaceOpsChooser"
></exampleRef
>.</p
><xi:include
href="../../AllomorphGeneratorDll/doc/AlloGenUserDocumentation.xml"
xpointer="xReplaceOpsChooser"
xmlns:xi="http://www.w3.org/2001/XInclude"
></xi:include
><p
>You can choose as many replace operations as are appropriate. They will be inserted together.</p
><p
>When you choose either the “Move up” or “Move down” option, the currently selected replace operation will be moved up or down in the list of replace operations.</p
><p
>When you choose the “Delete” option, the currently selected replace operation will be removed from the list of replace operations for the current operation. <object
type="tVarGen"
></object
> will also show you a list of which other operations, if any, are using the currently selected replace operation and ask if you want to delete the currently selected replace operation from the master list of all replace operations.</p
></section3
><section3
id="sActVariantsTypes"
><secTitle
>Variant types</secTitle
><p
>If you need to have one or more variant types be associated with the variant entry that will be produced, click on the “Edit” button to the right of the variant types box. This brings up a chooser showing all currently available variant types in the <object
type="tFLEx"
></object
> project. Click on the check box before all those that you need to be used.<endnote
id="nVariantsTypesFlattened"
><p
>Unlike the variant types chooser in <object
type="tFLEx"
></object
>, this chooser flattens all the types into one list. That is, the chooser does not show a hierarchical list.</p
></endnote
></p
></section3
><section3
id="sActSHowMinorEntry"
><secTitle
>Show minor entry</secTitle
><p
>When the new variant entry is created, you can make it so it will show as a minor entry or not. Check the box if you want it to show as a minor entry.</p
></section3
></section2
><section2
id="sApplyOperationsTo"
><secTitle
>Apply operations to drop-down box</secTitle
><p
>In the bottom left hand corner, there is a drop-down box. You can click on the button and choose which field in an entry to use for matching and applying replace operations. There are at least three options available:</p
><ol
><li
>Citation Form</li
><li
>Lexeme Form</li
><li
>Etymology Form</li
></ol
><pc
><object
type="tVarGen"
></object
> will use the default vernacular writing system in each case. If there is more than one etymology field, it will use the first one.</pc
><p
>It will also show any custom fields you have at the entry level which were created with the pattern illustrated by what is in example <exampleRef
letter="xVarCustomFieldSettings"
num="xVarCustomFieldSettings"
></exampleRef
>.</p
><example
num="xVarCustomFieldSettings"
><chart
><img
src="resources/VarCustomFieldSettings.png"
width="500"
></img
></chart
></example
><p
>In particular, the custom field must have:</p
><ul
><li
>A Location of “Entry”</li
><li
>A Type of “Single-line Text” and</li
><li
>A Writing Systems(s) of “First Vernacular Writing System.”</li
></ul
></section2
><section2
id="sSaveButton"
><secTitle
>Save changes button</secTitle
><p
>Use the “Save Changes” button to save any changes you have made to the operations file.</p
></section2
></section1
><section1
id="sRunTabVar"
><secTitle
><object
type="tRunTab"
></object
> tab</secTitle
><p
>The <object
type="tRunTab"
></object
> tab lists the same set of operations as are shown in the <object
type="tEditTab"
></object
> tab except that each one has a check box in front of it. Whichever operation is currently selected will be applied and the resulting forms will be shown in the “Preview of selected operation” portion of the tab.<endnote
id="nPreviewDanceVar"
><p
>In the preview portion, we try to set the various column widths automatically by the longest width in each column. This can sometimes make the view appear to “dance” a bit. Be patient and it will settle down.</p
></endnote
> These forms will appear as the Lexeme Form of the newly created variant entry.</p
><p
>Note that the preview portion only shows entries having the indicated form for which there is no Lexeme Form of some variant entry already in the database.<comment
><endnote
id="nVariantTypesignored"
><p
>When checking to see if there already is a variant entry whose Lexeme Form matches the to-be-generated form, the set of variant types and the state of the show minor entry value are ignored.</p
></endnote
></comment
> In addition, the indicated forms shown are for the default vernacular writing system. You can click on a column header to sort the rows by the content of that column. Note that it sorts by Unicode code points, not the way it might in <object
type="tFLEx"
></object
>.</p
><p
>Both of the items in the <object
type="tRunTab"
></object
> tab have check boxes and both have a checked check box as the column header of the first column. When you click on this checked box in the top row, you will see the menu shown in example <exampleRef
letter="xCheckBoxMenu"
num="xCheckBoxMenu"
></exampleRef
>.</p
><xi:include
href="../../AllomorphGeneratorDll/doc/AlloGenUserDocumentation.xml"
xpointer="xCheckBoxMenu"
xmlns:xi="http://www.w3.org/2001/XInclude"
></xi:include
><p
>This works like the bulk edit check box menu does in <object
type="tFLEx"
></object
>. For operations, you choose which operations you want to be applied when you press the <object
type="tApplyOps"
></object
> button. For the preview portion, it works like it does in bulk edit in <object
type="tFLEx"
></object
>: if an item is checked, a new variant will be produced for the entry containing that indicated form. If an item is not checked, it will be ignored (i.e., it will remain as it currently is).</p
><p
>See section <sectionRef
sec="sApplyOpsVar"
></sectionRef
> for more on what the <object
type="tApplyOps"
></object
> button does.</p
></section1
><section1
id="sEditReplaceOpTab"
><secTitle
><object
type="tEditReplaceTab"
></object
> tab</secTitle
><p
>The <object
type="tEditReplaceTab"
></object
> tab contains the master list of all replace operations. It lists them in a tabular form. Like in the <object
type="tRunTab"
></object
> tab, you can click on the table column headers to sort the table by that column.</p
><p
>This tab has four buttons:</p
><ol
><li
>Edit: this brings up the Edit Replace Dialog shown in example <exampleRef
letter="xReplaceDialog"
num="xReplaceDialog"
></exampleRef
>.</li
><li
>Add new: this also brings up that dialog but it is empty so you can add a new replace operation.</li
><li
>Delete: this allows you to delete replace operations you no longer wish to maintain. When you click on the "Delete” button, <object
type="tVarGen"
> </object
> will show you a list of which operations, if any, are using the currently selected replace operation and ask if you want to delete it.</li
><li
>Save Changes: this is the same as the “Save Changes” buttons in the other two tabs.</li
></ol
><p
>Alternatively, you can right-click in the table and use the context menu shown in example <exampleRef
letter="xEditReplaceOpsContetMenu"
num="xEditReplaceOpsContetMenu"
></exampleRef
>.</p
><xi:include
href="../../AllomorphGeneratorDll/doc/AlloGenUserDocumentation.xml"
xpointer="xEditReplaceOpsContetMenu"
xmlns:xi="http://www.w3.org/2001/XInclude"
></xi:include
></section1
><section1
id="sApplyOpsVar"
><secTitle
>Applying operations</secTitle
><p
>When you use the <object
type="tApplyOps"
></object
> button, <object
type="tVarGen"
></object
> will first check to see if there are any variant types which are not currently valid in the <object
type="tFLEx"
></object
> project and give you a message about which ones they are and which operation they are in. While not necessarily likely, it is possible that a given variant type may have been deleted in the <object
type="tFLEx"
></object
> project since you created the operation.</p
><p
>If there are no problematic variant types, then <object
type="tVarGen"
></object
> will insert a new variant entry for each checked operation. When it is done, the preview portion will no longer show those indicated forms which have had a variant entry added. In addition, in <object
type="tFLEx"
></object
>, the <object
type="tMenuItem"
>Edit / Undo</object
> menu item will show the last operation performed. You can use this to reverse the changes it made. In fact, the Undo/Redo menus will list the operations performed in reverse order.</p
><p
>If the replace operations for a particular writing system results in an empty form, <object
type="tVarGen"
></object
> will use a non-breaking space to avoid the <object
type="tFLEx"
></object
> parser using a non-empty value in some other writing system for that Lexeme Form.</p
></section1
><section1
id="sRememberingVar"
><secTitle
>Restarting <object
type="tVarGen"
></object
></secTitle
><p
>Whenever you exit and restart <object
type="tVarGen"
></object
>, it will do the following:</p
><ol
><li
>remember its window size, location, and layout;</li
><li
>remember which <object
type="tVarGen"
></object
> file you last chose;</li
><li
>remember which tab you last selected;</li
><li
>remember which operation you last selected for each tab.</li
></ol
></section1
><section1
id="sErrorMessageVar"
><secTitle
>Error messages</secTitle
><p
>In certain situations, <object
type="tVarGen"
></object
> will issue an error message.</p
><p
>Table <tablenumberedRef
table="ntErrorMessagesVar"
></tablenumberedRef
> lists the errors <object
type="tVarGen"
></object
> reports along with a brief description of what the error might mean.</p
><tablenumbered
XeLaTeXSpecial="pagebreak"
id="ntErrorMessagesVar"
><table
border="1"
><caption
>Error messages</caption
><tr
><th
width="3in"
>Error</th
><th
width="2.85in"
>Meaning</th
></tr
><tr
><td
><object
type="tErrorType"
>The category '<object
type="tItalic"
>category name</object
>' was not found in the FLEx database</object
></td
><td
>The indicated category is no longer found in the <object
type="tFLEx"
> </object
> project. Try to change it to one that is now present.</td
></tr
><tr
XeLaTeXSpecial="row-separation='-6pt'"
><td
> </td
><td
> </td
></tr
><tr
><td
><object
type="tErrorType"
>No operations are selected, so there's nothing to do</object
></td
><td
>This is shown when the <object
type="tApplyOps"
></object
> button is pressed but no operations have been checked. Try checking at least one operation.</td
></tr
><tr
XeLaTeXSpecial="row-separation='-6pt'"
><td
> </td
><td
> </td
></tr
><tr
><td
><object
type="tErrorType"
>The variant type '<object
type="tItalic"
>variant type</object
>' is no longer found. Please fix it in operation '<object
type="tItalic"
>operation name</object
>'.</object
></td
><td
>The indicated variant type is no longer in the <object
type="tFLEx"
> </object
> project. You will need to fix it in the indicated operation.</td
></tr
></table
></tablenumbered
><p
>If you get an error message not in the list above, please report it. See section <sectionRef
sec="sSupport"
></sectionRef
>.</p
></section1
><section1
id="sKnownProblemsVar"
><secTitle
>Known problems</secTitle
><p
>The following items are known to be less than desirable with this version of <object
type="tVarGen"
></object
>:</p
><ol
><li
><object
type="tVarGen"
></object
> only works with version <object
type="tFLExVersion"
></object
> or higher of <object
type="tFLEx"
></object
>.</li
><li
>The user interface is in English only.</li
><li
>When you start <object
type="tVarGen"
></object
>, if <object
type="tFLEx"
></object
> is showing as full screen, you may not see the <object
type="tVarGen"
></object
> dialog. You may have to either make <object
type="tFLEx"
></object
> be in its “Restore” mode or find the <object
type="tVarGen"
></object
> dialog and move it to another screen.</li
><li
>Whenever you upgrade your version of <object
type="tFLEx"
></object
>, you may have to re-install <object
type="tVarGen"
></object
>. In particular, the “Variant Generator” item under <object
type="tMenuItem"
>Tools</object
> menu item / <object
type="tMenuItem"
>Utilities...</object
> may not show.</li
><li
>Every newly added Lexeme Form will have the same Morph Type as does the Lexeme Form of the main entry.  If this is incorrect, you will need to use <object
type="tView"
>Lexicon</object
> / <object
type="tView"
>Bulk Edit Entries</object
> / List Choice (with the Morph Type column showing) to fix this.</li
></ol
></section1
><section1
id="sSupport"
><secTitle
>Support</secTitle
><p
>If you have any questions with <object
type="tVarGen"
></object
> or find bugs in it, please send an email to <link
href="mailto:blackhandrew@gmail.com"
>blackhandrew@gmail.com</link
>.</p
></section1
><backMatter
><endnotes
></endnotes
><references
></references
></backMatter
><xi:include
href="../../AllomorphGeneratorDll/doc/AlloGenUserDocumentation.xml"
xpointer="element(/1/1/1/12)"
xmlns:xi="http://www.w3.org/2001/XInclude"
></xi:include
><xi:include
href="../../AllomorphGeneratorDll/doc/AlloGenUserDocumentation.xml"
xpointer="element(/1/1/1/13)"
xmlns:xi="http://www.w3.org/2001/XInclude"
></xi:include
></lingPaper
><xi:include
href="../../AllomorphGeneratorDll/doc/AlloGenUserDocumentation.xml"
xpointer="element(/1/1/2)"
xmlns:xi="http://www.w3.org/2001/XInclude"
></xi:include
></styledPaper
></xlingpaper
>
